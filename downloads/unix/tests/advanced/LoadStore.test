#
# Testing Load/Store events
#

# load the extension
load ./libPerft1.0.so

# initialize event set
perft::init [list PAPI_LD_INS PAPI_SR_INS  PAPI_TOT_INS]

# take a large random list
set ls [list ]

set script0 {
    for { set i 0 } { $i < 10000 } { incr i } {
        lappend ls 1
    }
}

set script1 {
set ls [lreplace $ls 0 9999 $ls]
    }
#set script1 [string repeat $script1 10000]

set script2 {
set a $ls
    }

#set script2 [string repeat $script2 10000]

puts "Load/store instructions should increase downward....."
puts "-------------------------------"

set results [perft::run_script $script2]
#puts "Load instructions ....... [expr [dict get $results PAPI_LD_INS]*100.0/[dict get $results PAPI_TOT_INS]]%"
#puts "Store instructions ....... [expr [dict get $results PAPI_SR_INS]*100.0/[dict get $results PAPI_TOT_INS]]%"
puts $results
puts "-------------------------------"

set results [perft::run_script $script1]
#puts "Load instructions ....... [expr [dict get $results PAPI_LD_INS]*100.0/[dict get $results PAPI_TOT_INS]]%"
#puts "Store instructions ....... [expr [dict get $results PAPI_SR_INS]*100.0/[dict get $results PAPI_TOT_INS]]%"
puts $results
puts "-------------------------------"

set results [perft::run_script $script0]
#puts "Load instructions ....... [expr [dict get $results PAPI_LD_INS]*100.0/[dict get $results PAPI_TOT_INS]]%"
#puts "Store instructions ....... [expr [dict get $results PAPI_SR_INS]*100.0/[dict get $results PAPI_TOT_INS]]%"
puts $results
puts "-------------------------------"
